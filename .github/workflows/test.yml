name: Test

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/build/vcpkg_installed
          key: ${{ runner.os }}-${{ hashFiles('vcpkg.json') }}

      - name: Cache image
        id: cache-image
        uses: actions/cache@v3
        with:
          path: /tmp/dockerfile
          key: ${{ runner.os }}-${{ hashFiles('dockerfile/dependencies.Dockerfile') }}

      # If cache miss, pull and save into cache directory
      - name: Pull image
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          docker pull craftarc/axel:dependencies
          mkdir -p /tmp/dockerfile
          docker save -o /tmp/dockerfile/dependencies.tar craftarc/axel:dependencies

      # If cache hit, load from cache
      - name: Load image
        if: steps.cache-image.outputs.cache-hit == 'true'
        run: |
          docker load -i /tmp/dockerfile/dependencies.tar


      # Using a Docker image as part of 'uses' seems to mount the runner's workspace into the container automatically
      - name: test
        uses: docker://craftarc/axel:dependencies
        with:
          entrypoint: scripts/workflows/test.sh

      - name: after
        run: |
          echo "state of workspace outside of container after: expect hello.txt"
          pwd
          ls
          
          


